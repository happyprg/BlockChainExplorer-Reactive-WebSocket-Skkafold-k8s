apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"kubernetes.io/ingress.class":"nginx","nginx.ingress.kubernetes.io/rewrite-target":"/"},"name":"nginx-ingress-happyprg","namespace":"default"},"spec":{"rules":[{"host":"happyprg.com","http":{"paths":[{"backend":{"serviceName":"node-web-app","servicePort":8080},"path":"/node-web-app"},{"backend":{"serviceName":"es-mapping","servicePort":8080},"path":"/es-mapping"}]}}]}}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    #    nginx.org/websocket-services: blockexplorer/ws it does not work
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"
  creationTimestamp: null
  generation: 1
  name: nginx-ingress-happyprg
  selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/nginx-ingress-happyprg
spec:
  rules:
    - host: happyprg.com
      http:
        paths:
          - backend:
              serviceName: node-web-app
              servicePort: 8080
            path: /node-web-app
          - backend:
              serviceName: blockexplorer
              servicePort: 8080
            path: /blockexplorer

status:
  loadBalancer: {}
